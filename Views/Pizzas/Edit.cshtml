@model pizza_planner.Models.Pizza

@{
    ViewData["Title"] = "Edit";
    var sizes = Enum.GetValues(typeof(PizzaSize)).Cast<PizzaSize>();
    var crusts = Enum.GetValues(typeof(PizzaCrust)).Cast<PizzaCrust>();
}

<h1>Edit</h1>

<div class="d-flex justify-content-between">
	<h4>Pizza</h4>

	<a href="@Url.Action("Delete", "/Pizzas", new { id = Model.Id })" class="btn btn-outline-danger">
		<i class="fa fa-trash"></i>
	</a>
</div>
<hr />
<div class="row">
    <div class="col-md-6">
        <form asp-action="Edit">
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Price" class="control-label"></label>
                <div class="input-group d-flex align-items-center">
					<input type="text" asp-for="Price" asp-format="{0:#,###.00}" class="form-control me-2" />
                    <span class="input-group-addon">PLN</span>
                </div>
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Size" class="control-label"></label>
                <select asp-for="Size" class="form-control">
                    @foreach (var size in sizes)
                    {
                        <option value="@((int)size)">@size.ToString()</option>
                    }
                </select>
                <span asp-validation-for="Size" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Crust" class="control-label"></label>
                <select asp-for="Crust" class="form-control">
                    @foreach (var crust in crusts)
                    {
                        <option value="@((int)crust)">@crust.ToString()</option>
                    }
                </select>
                <span asp-validation-for="Crust" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Ingredients" class="control-label"></label>
                <select asp-for="Ingredients" class="form-select" id="multiple-select" data-placeholder="Choose anything" multiple formnovalidate="formnovalidate">
                    @foreach (var ingredient in ViewBag.Ingredients)
                    {
                        <option value="@((int)ingredient.Id)"
                                selected="@(Model.Ingredients?.FirstOrDefault(i => i.Id == ingredient.Id) != null)">
                            @ingredient.Name
                        </option>
                    }
                </select>
                <span asp-validation-for="Ingredients" class="text-danger"></span>
            </div>
            <div class="form-group mt-3 mb-3">
                
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $('#multiple-select').select2({
            theme: 'bootstrap-5',
            closeOnSelect: false,
            allowClear: true
        });
    </script>
}
