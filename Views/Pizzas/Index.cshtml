@model IEnumerable<pizza_planner.Models.Pizza>

@{
    ViewData["Title"] = "Pizzas";
}

<h1>Our Pizzas</h1>

<form class="col-md-4" role="search">
    <div class="input-group mb-3">
        <div class="input-group-append">
		    <input type="text" class="form-control rounded" typeof="search" placeholder="Search" aria-label="Search"
                   name="query" value="@ViewBag.Query">
        </div>
        <div class="input-group-append">
            <button class="btn btn-primary" type="submit">
                <i class="fa fa-search"></i>
            </button>
        </div>
        <div class="input-group-append">
            <a href="@Url.Action("Index", "/Pizzas")" 
               class="btn btn-danger @(String.IsNullOrWhiteSpace(ViewBag.Query) ? "invisible" : "visible")">
                <i class="fa fa-close"></i>
            </a>
        </div>
    </div>
</form>

<p>
    <a href="@Url.Action("Create", "/Pizzas")" class="btn btn-success">
        <i class="fa fa-plus"></i> Create New
    </a>
</p>
<table class="table caption-top align-middle">
    <thead>
        <tr>
            <th scope="col">#</th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                Ingredients
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Size)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Crust)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <th scope="row">@item.Id</th>
            <td>
                <a href="@Url.Action("Details", "/Pizzas", new { id = item.Id })"
                   class="link-underline link-underline-opacity-0 link-underline-opacity-75-hover">
                        @item.Name
                </a>
            </td>
            <td>
                @(item.Ingredients.Count > 0 ? String.Join(", ", item.Ingredients) : "-")
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @{
                    var color = "primary";
                    switch (item.Size)
                    {
                        case PizzaSize.Small:
                            color = "primary"; break;
                        case PizzaSize.Medium:
                            color = "secondary"; break;
                        case PizzaSize.Large:
                            color = "success"; break;
                    }
                }
                <span class="badge text-bg-@color">@item.Size</span>
            </td>
            <td>
                @{
                    color = "primary";
                    switch (item.Crust)
                    {
                        case PizzaCrust.Thick:
                            color = "success"; break;
                        case PizzaCrust.Thin:
                            color = "danger"; break;
                    }
                }
				<span class="badge text-bg-@color">@item.Crust</span>
            </td>
            <td>
                <a href="@Url.Action("Edit", "/Pizzas", new { id = item.Id })" class="btn btn-outline-primary">
                    <i class="fa fa-edit"></i>
                </a>
                <a href="@Url.Action("Delete", "/Pizzas", new { id = item.Id })" class="btn btn-outline-danger">
                    <i class="fa fa-trash"></i>
                </a>
            </td>
        </tr>
}
    </tbody>
</table>
